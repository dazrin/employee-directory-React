{"version":3,"sources":["components/Header/index.js","components/List/Search.js","components/List/Table.js","utils/API.js","components/List/index.js","App.js","index.js"],"names":["Header","className","Search","props","onChange","handleInputChange","value","search","name","type","id","placeholder","Table","scope","onClick","handleClick","icon","faCaretUp","toggle","results","map","employee","src","picture","alt","phone","email","dob","axios","get","List","state","all","bind","this","generateEmployees","API","then","res","obj","data","index","first","last","date","substring","thumbnail","setState","catch","err","console","log","e","target","input","filter","toLowerCase","includes","employees","sort","a","b","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.400f3d97.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n// Header component; Renders main header\nconst Header = () => {\n  return (\n    <div>\n      <div className=\"jumbotron header\">\n        <h1 className=\"title mb-8\">Employee Directory</h1>\n        <h5>Select a category from the table to sort by that category, or search using the search bar</h5>\n      </div>\n      <div className=\"header-bottom\"></div>\n    </div>\n  )\n}\n\nexport default Header;","import \"./Search.css\";\n\n// Search Component; Passing in and defining props; Returns Search-Bar Div\nconst Search = (props) => {\n  return (\n    <div className=\"search-bar\">\n      <strong className=\"search-text\">Search Employee: </strong> \n      <input \n        onChange={props.handleInputChange}\n        value={props.search}\n        name=\"search\"\n        type=\"text\"\n        id=\"search\"\n        placeholder=\"Search Employee Name\"\n      />\n    </div>\n  )\n}\n\nexport default Search;","import \"./Table.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCaretUp } from '@fortawesome/free-solid-svg-icons'\n\n// Table component; Passes in props object; Returns Table populated with employee data\nconst Table = (props) => {\n  return (\n    <div className=\"table-employee\">\n      <table className=\"table table-hover\">\n        <thead>\n          <tr>\n            <th scope=\"col\"></th>\n            <th scope=\"col\" onClick={() => \n              props.handleClick('name')} className=\"pointer\" >Name  <span className=\"icon\"><FontAwesomeIcon icon={faCaretUp} className={`rotate-${props.toggle['name']}`}/></span></th>\n            <th scope=\"col\" onClick={() =>\n               props.handleClick('phone')} className=\"pointer\">Phone  <span className=\"icon\"><FontAwesomeIcon icon={faCaretUp} className={`rotate-${props.toggle['phone']}`}/></span></th>\n            <th scope=\"col\" onClick={() =>\n               props.handleClick('email')} className=\"pointer\">Email  <span className=\"icon\"><FontAwesomeIcon icon={faCaretUp} className={`rotate-${props.toggle['email']}`}/></span></th>\n            <th scope=\"col\" onClick={() =>\n               props.handleClick('dob')} className=\"pointer\">DOB  <span className=\"icon\"><FontAwesomeIcon icon={faCaretUp} className={`rotate-${props.toggle['dob']}`}/></span></th>\n          </tr>\n        </thead>\n        <tbody>\n        {props.results.map(employee => (\n          <tr key={employee.id}>\n            <td><img src={employee.picture} alt={employee.name}/></td>\n            <td>{employee.name}</td>\n            <td>{employee.phone}</td>\n            <td>{employee.email}</td>\n            <td>{employee.dob}</td>\n          </tr>\n        ))}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\n// Export Table component\nexport default Table;","// Use Axios to fetch data from API\nimport axios from \"axios\";\n\n// Declare Random User Generator API url as baseurl\nconst BASEURL = \"https://randomuser.me/api/?results=50&inc=name,email,dob,picture,phone&nat=ca\";\n\n// Export data from url\nexport default {\n  generate: function() {\n    return axios.get(BASEURL);\n  }\n};\n","import React, { Component } from \"react\";\nimport Search from \"./Search\";\nimport Table from \"./Table\";\nimport API from \"../../utils/API\";\n\n// Employee List Class Component\nclass List extends Component {\n\n  // Constructor for class component, passing in props\n  constructor(props) {\n\n    // Passing props to parent constructor\n    super(props);\n\n    // Declare state object, passing in props\n    this.state = {\n      search: \"\",\n      results: [],\n      all: [],\n      toggle: {\n        'name' : false,\n        'phone' : false,\n        'email' : false,\n        'dob' : false\n      } \n    }\n\n    // State methods\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  // When component renders, run generateEmployee function to call API to receive data\n  componentDidMount() {\n    this.generateEmployees();\n  }\n\n  // Fetch data from API\n  // Creating new object for simplification; Define id as index \n  generateEmployees() {\n\n    // Call API; Fetch Request using axios\n    API.generate()\n\n    // Return data as object\n      .then(res => {\n\n        // Declaring new object using received data;\n        // Using .map() method to return each employee's data and set id as the index\n        let obj = res.data.results.map((employee, index) => {\n          return {\n            'name' : employee.name.first + ' ' + employee.name.last,\n            'phone' : employee.phone,\n            'email' : employee.email,\n            'dob' : employee.dob.date.substring(0,10),\n            'picture': employee.picture.thumbnail,\n            'id' : index\n          }\n\n        })\n        this.setState({ results: obj, all: obj })\n      })\n      .catch(err => console.log(err));\n  };\n\n\n  // Event listener to handle and update state on input change; filters out list of employees when searching\n  handleInputChange(e){\n\n    // Define event target name & search input\n    const name = e.target.name;\n    const input = e.target.value;\n    \n    // Call setState method of state object to update results property in state object\n    // Using .filter() method to update state object to only display employees whose name matches input characters\n    this.setState({ \n      results: this.state.all.filter(employee => \n        employee.name.toLowerCase().includes(input.toLowerCase()\n        )),\n      [name]: input\n    });\n  };\n\n  // Sorting results in ascending or descending order on click of table header\n  // If sorted in a certain order, sort in the opposite order\n  handleClick(id) {\n\n    // Define employees as all employees being displayed in current state\n    const employees = [...this.state.results];\n\n    // Define toggle as current value of toggle in state\n    const toggle = {...this.state.toggle}\n\n    // Pass in id of clicked element and set it to the opposite value\n    toggle[id] = !toggle[id]\n\n    // Using .sort() method to return results in either ascending or descending order based on id\n    employees.sort(( a, b ) =>{\n\n      if(toggle[id]) return (a[id] > b[id]) ? 1 : -1;\n      else return (a[id] < b[id]) ? 1 : -1;\n    })\n\n    // Filter search results\n    const results = employees.filter(employee =>\n      employee.name.toLowerCase().includes(this.state.search.toLowerCase()));\n    \n    // Update state\n    this.setState({ \n      employees,\n      toggle,\n      results\n    });\n  };\n\n  // Render component;\n      // Returns Div with search & table components\n      // Search state passed in as a prop using state value\n      // Input handler event listener passed in as prop into search component\n      // Pass in results & toggle as props using state value\n      // Click handler event listener passed in as prop into table component\n  render() {\n    return (\n      <div>\n        <Search\n          search={this.state.search}\n          handleInputChange={this.handleInputChange}\n        />\n        <Table \n        results={this.state.results} \n        handleClick={this.handleClick}\n        toggle={this.state.toggle}\n        />\n      </div>\n    );\n  }\n}\n\n// Export List Component\nexport default List;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport List from \"./components/List\";\n\n// App Component; Returns a div with the Header and Main component inside\nconst App = () => {\n  return (\n    <div>\n      <Header />\n      <List />\n    </div>\n  )\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}